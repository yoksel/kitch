!function(t){var e={};function o(n){if(e[n])return e[n].exports;var r=e[n]={i:n,l:!1,exports:{}};return t[n].call(r.exports,r,r.exports,o),r.l=!0,r.exports}o.m=t,o.c=e,o.d=function(t,e,n){o.o(t,e)||Object.defineProperty(t,e,{configurable:!1,enumerable:!0,get:n})},o.r=function(t){Object.defineProperty(t,"__esModule",{value:!0})},o.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return o.d(e,"a",e),e},o.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},o.p="",o(o.s=21)}([function(t,e,o){"use strict";Object.defineProperty(e,"__esModule",{value:!0});e.config={top:{width:[50,150,100,50],height:60,deep:40},bottom:{width:[250,150,100,50],height:100,deep:60},verticalGap:50}},function(t,e){throw new Error("Module parse failed: Unexpected character 'ï¿½' (1:4)\nYou may need an appropriate loader to handle this file type.\n(Source code omitted for this binary file)")},function(t,e){throw new Error("Module parse failed: Unexpected character '\0' (1:6)\nYou may need an appropriate loader to handle this file type.\n(Source code omitted for this binary file)")},function(t,e,o){t.exports=o.p+"2ae2538f98326ee271375580b8ef2608.jpg"},function(t,e,o){t.exports=o.p+"2f4539e7c4a1837b87a1e1160199a100.jpg"},function(t,e,o){t.exports=o.p+"f874662179a317dbdda0f0c1b4ad1a6b.jpg"},function(t,e,o){t.exports=o.p+"9359abfb691f46e67ac6d14a0297620f.jpg"},function(t,e,o){t.exports=o.p+"581486b0c9cf53c026150ef6c44db5ea.jpg"},function(t,e,o){t.exports=o.p+"41a74d92edfed147c06fabf59cac4d1b.jpg"},function(t,e,o){t.exports=o.p+"b90472bf5db0c86ed5de48d299c93551.jpg"},function(t,e,o){t.exports=o.p+"5d311f0d97ad037eb9b1eded43bc5887.jpg"},function(t,e,o){t.exports=o.p+"92b0dced111a4b002e3ccc6d1b19494f.jpg"},function(t,e,o){t.exports=o.p+"93c562ddb39457cf1704b631fb084ff2.jpg"},function(t,e,o){t.exports=o.p+"0b5a043b68db3395d31e3e21fba8f3ed.jpg"},function(t,e,o){t.exports=o.p+"2136a00f74b21e3bc448b9a0c8673bb3.jpg"},function(t,e,o){t.exports=o.p+"036d66266ed4f1b98711bdd853da994a.jpg"},function(t,e,o){t.exports=o.p+"f537103009de39e45e70d8af85f10c9b.jpg"},function(t,e,o){var n={"./patterns/lsd-2.jpg":16,"./patterns/lsd-3.jpg":15,"./patterns/lsd.jpg":14,"./patterns/plastic-1.jpg":13,"./patterns/plastic-2.jpg":12,"./patterns/plastic-3.jpg":11,"./patterns/wood-1.jpg":10,"./patterns/wood-2.jpg":9,"./patterns/wood-3.jpg":8,"./walls/blue-tiles.jpg":7,"./walls/brown-tiles.jpg":6,"./walls/circles.jpg":5,"./walls/galaxy.jpg":4,"./walls/gray-tiles.jpg":3,"./wash-machines/electrolux.webp":2,"./wash-machines/indesit.webp":1};function r(t){var e=i(t);return o(e)}function i(t){var e=n[t];if(!(e+1)){var o=new Error('Cannot find module "'+t+'".');throw o.code="MODULE_NOT_FOUND",o}return e}r.keys=function(){return Object.keys(n)},r.resolve=i,t.exports=r,r.id=17},function(t,e,o){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.setSizes=e.elementsMap=void 0;var n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},r=o(0);var i=new Map;e.elementsMap=i,e.setSizes=function(){var t,e={top:(t=(t=[r.config.top.width,r.config.bottom.width]).map(function(t){return"object"===(void 0===t?"undefined":n(t))&&(t=t.reduce(function(t,e){return t+=e},0)),t}))[0],bottom:t[1],max:Math.max.apply(Math,function(t){if(Array.isArray(t)){for(var e=0,o=Array(t.length);e<t.length;e++)o[e]=t[e];return o}return Array.from(t)}(t))};i.set(".wrapper",{width:e.max}),i.set(".scene",{width:e.max,height:r.config.verticalGap+r.config.top.height+r.config.bottom.height}),i.set(".block--top",{width:e.top,height:r.config.top.height,transform:"translateZ("+r.config.top.deep+"px)"}),i.set(".top__top",{width:e.top,height:r.config.top.deep}),i.set(".top__bottom",{width:e.top,height:r.config.top.deep}),i.set(".top__side",{width:r.config.top.deep,height:r.config.top.height}),i.set(".top__front",{width:r.config.top.width,height:r.config.top.height}),i.set(".block--bottom",{width:e.bottom,height:r.config.bottom.height,transform:"translateZ("+r.config.bottom.deep+"px)"}),i.set(".bottom__top",{width:e.bottom,height:r.config.bottom.deep}),i.set(".bottom__bottom",{width:e.bottom,height:r.config.bottom.deep}),i.set(".bottom__side",{width:r.config.bottom.deep,height:r.config.bottom.height}),i.set(".bottom__front",{width:r.config.bottom.width,height:r.config.bottom.height})}},function(t,e,o){"use strict";Object.defineProperty(e,"__esModule",{value:!0});e.walls=["brown-tiles.jpg","gray-tiles.jpg","galaxy.jpg"]},function(t,e,o){"use strict";Object.defineProperty(e,"__esModule",{value:!0});e.patterns=["wood-2.jpg","wood-1.jpg","wood-3.jpg","plastic-3.jpg","lsd.jpg","lsd-2.jpg","lsd-3.jpg"]},function(t,e,o){"use strict";var n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},r=function(){return function(t,e){if(Array.isArray(t))return t;if(Symbol.iterator in Object(t))return function(t,e){var o=[],n=!0,r=!1,i=void 0;try{for(var a,c=t[Symbol.iterator]();!(n=(a=c.next()).done)&&(o.push(a.value),!e||o.length!==e);n=!0);}catch(t){r=!0,i=t}finally{try{!n&&c.return&&c.return()}finally{if(r)throw i}}return o}(t,e);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}();o(26);var i=o(0),a=o(20),c=o(19),s=o(18),p=(o(17),document.querySelector(".patterns")),d=document.querySelector(".walls"),l=document.querySelector(".rotator__range"),u=document.querySelector(".scene"),f=document.querySelector(".surface-sizes-css"),g=document.querySelector(".surface-patterns-css"),b=document.querySelector(".walls-css"),h=document.querySelector(".surface__size-input"),m=void 0,y=[{name:"top",parent:document.querySelector(".block--top"),block:document.querySelector(".top__front")},{name:"bottom",parent:document.querySelector(".block--bottom"),block:document.querySelector(".bottom__front")}];function v(){var t=[],e=!0,o=!1,n=void 0;try{for(var i,a=s.elementsMap[Symbol.iterator]();!(e=(i=a.next()).done);e=!0){var c=i.value,p=r(c,2),d=p[0],l=p[1],u=[];for(var g in l){var b=l[g],h=g+": "+b+("number"==typeof b?"px":"");u.push(h)}t.push(d+"{"+u.join(";\n")+"}")}}catch(t){o=!0,n=t}finally{try{!e&&a.return&&a.return()}finally{if(o)throw n}}f.innerHTML=t.join("\n")}function w(t){var e=t.elem,o=t.list,n=(t.name,t.target),r=t.styles,i=document.createElement("ul");i.classList.add("chooser__list");var a=void 0,c="chooser__item",s="chooser__item--current";o.forEach(function(t,e){var o=document.createElement("li");o.classList.add(c);var p="./img/"+t;o.style.background="url("+p+")",i.appendChild(o),0===e&&(o.classList.add("chooser__item--current"),o.classList.add(s),a=o,_(n,p,r)),o.addEventListener("click",function(){_(n,p,r),a.classList.remove(s),o.classList.add(s),a=o})}),e.appendChild(i)}function _(t,e,o){o.innerHTML=t+" {\n        background-image: url("+e+");\n    }"}function j(t,e){var o=e.dataset.line,n=e.dataset.content,r=e.dataset.pos;console.log(e.dataset),e.style[n]=t+"px",r?i.config[o][n][r]=+t:i.config[o][n]=+t,x()}function x(){(0,s.setSizes)(),v()}function S(t,e){!0==!!t.dataset.isEditing&&(t.dataset.isEditing=!1,t.querySelector(".surface__size-text").innerHTML=e+"mm",m=null,j(+e,t),x())}console.log(i.config),i.config.hello=112233,y.forEach(function(t){var e=t.name,o=i.config[e].width,r=t.block,a=t.parent;"object"===(void 0===o?"undefined":n(o))&&o.forEach(function(t,o){var n=r.cloneNode(!0);0===o&&(n=r),n.style.width=t+"px",n.dataset.line=e,n.dataset.pos=o,o>0&&a.appendChild(n)})}),(0,s.setSizes)(),v(),document.querySelectorAll(".surface[data-content]").forEach(function(t){var e=t.dataset.content,o=getComputedStyle(t)[e];o=o.replace("px","mm");var n=t.querySelector(".surface__size-text");n.innerHTML=o;var r=t.querySelector(".surface__size");r.addEventListener("click",function(){if("true"!==t.dataset.isEditing){if(console.log("click, this is not edited now"),m&&m!==r){var e=m.querySelector(".surface__size-input");S(m,e.value)}m=t,function(t){if("true"!==t.dataset.isEditing){t.dataset.isEditing=!0;var e=t.querySelector(".surface__size-text"),o=e.innerText.replace("mm","");t.dataset.oldValue=o,h.value=o,e.innerHTML="",e.appendChild(h),h.addEventListener("input",n),h.onkeyup=function(e){if(e.stopPropagation(),13===e.keyCode||27===e.keyCode){var r=h.value;27===e.keyCode&&(r=o),h.removeEventListener("input",n),S(t,r)}}}function n(e){"false"!==t.dataset.isEditing&&(e.stopPropagation(),j(h.value,t))}}(t)}})}),w({name:"patterns",elem:p,list:a.patterns,target:".surface",styles:g}),w({name:"walls",elem:d,list:c.walls,target:".wall",styles:b}),l.addEventListener("input",function(){u.style.transform="rotateY("+this.value+"deg)"})},,,,,function(t,e){}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,